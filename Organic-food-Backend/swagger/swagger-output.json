{
  "openapi": "3.0.0",
  "info": {
    "title": "Client Project API",
    "description": "Auto-generated Swagger docs",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "fullname",
                  "emailaddress",
                  "password"
                ],
                "properties": {
                  "fullname": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "emailaddress": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "StrongPass123"
                  },
                  "confirmpassword": {
                    "type": "string",
                    "example": "StrongPass123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User registered successfully"
                        },
                        "userId": {
                          "type": "string",
                          "example": "647f2a8f1a3f7a3b2c123456"
                        }
                      }
                    },
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "responseCode": {
                      "type": "integer",
                      "example": 201
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "fullname, emailaddress, and password ,role are required"
                      ]
                    },
                    "responseCode": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Email already exists"
                      ]
                    },
                    "responseCode": {
                      "type": "integer",
                      "example": 409
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Internal Server Error"
                      ]
                    },
                    "responseCode": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Login User",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "emailaddress",
                  "password"
                ],
                "properties": {
                  "emailaddress": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "StrongPass123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Login successful"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    },
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "responseCode": {
                      "type": "integer",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Invalid email or password"
                      ]
                    },
                    "responseCode": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "error": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Internal Server Error"
                      ]
                    },
                    "responseCode": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user and blacklist the JWT token",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "summary": "Google OAuth login",
        "description": "Redirect user to Google for OAuth authentication.",
        "responses": {
          "302": {
            "description": "Redirect to Google OAuth consent screen"
          }
        }
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "summary": "Google OAuth callback",
        "description": "Google OAuth callback URL to handle OAuth response.",
        "responses": {
          "200": {
            "description": "OAuth successful, returns JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT access token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or OAuth failed"
          }
        }
      }
    },
    "/api/auth/facebook": {
      "get": {
        "summary": "Facebook OAuth login",
        "description": "Redirect user to Facebook for OAuth authentication.",
        "responses": {
          "302": {
            "description": "Redirect to Facebook OAuth consent screen"
          }
        }
      }
    },
    "/api/auth/facebook/callback": {
      "get": {
        "summary": "Facebook OAuth callback",
        "description": "Facebook OAuth callback URL to handle OAuth response.",
        "responses": {
          "200": {
            "description": "OAuth successful, returns JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT access token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or OAuth failed"
          }
        }
      }
    }
  }
}